The goal is to get all the redis hash value out 
it should be done every 15 mins 
take all values and store in json file 
have a mechnis to push value in redis set again in case for recovery for one time 



-- database file name 
    -- redis_hash.json (store all the hash values)


-- Design 

    redis_recovery (folder)
        -- redis_recovery_fun (file)
            -- store_hash_val()
                -- store the hash value in python hashmap
            -- save_hash_to_json(dictionary, file_path)
                 -- store the hash map values in json file
            -- run_periodically()
                -- to run the save_hash_to_json periodically every 15 mins
        -- push_hash_to_redis(file)
            -- push_hash_from_json_to_redis(file_path, hash_name)
                -- push hashes val from json to redis hash


-- The redis_recovery_fun.py file shoudl run every 15 mins on server 
-- In case of redis failure it can be restored by running push_hash_to_redis 


-- Testing 
    -- make a new hash 
    -- run the redis_recovery_fun 
    -- check working 
    -- delete the database 
    -- check if failed
    -- run the push_hash_to_redis
    -- check the url redirection
