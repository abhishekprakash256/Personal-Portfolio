- name: Service Checks
  hosts: ec2
  become: yes

  tasks:
    - name: Check server is up by pinging localhost
      command: ping -c 4 localhost
      register: ping_result

    - name: Check redis service status with systemctl
      shell: systemctl is-active redis-server || true
      register: redis_service_status_systemctl  
      ignore_errors: yes
  
    - name: Fail if Redis is inactive
      ansible.builtin.fail:
        msg: "Redis service is inactive!"
      when: redis_service_status_systemctl.stdout == "inactive"


    - name: Check mongo service status with systemctl
      shell: systemctl is-active mongod || true
      register: mongo_service_status_systemctl  
      ignore_errors: yes
  
    - name: Fail if mongo is inactive
      ansible.builtin.fail:
        msg: "Mongo service is inactive!"
      when: mongo_service_status_systemctl.stdout == "inactive"


    - name: Check nginx service status with systemctl
      shell: systemctl is-active nginx || true
      register: nginx_service_status_systemctl  
      ignore_errors: yes
  
    - name: Fail if nginx is inactive
      ansible.builtin.fail:
        msg: "Nginx service is inactive!"
      when: nginx_service_status_systemctl.stdout == "inactive"   


    - name: Check Gunicorn process
      shell: "ps aux | grep '[g]unicorn' | grep -v grep"
      register: gunicorn_process_check
      ignore_errors: yes

    - name: Print Gunicorn process status
      ansible.builtin.debug:
        msg: "Gunicorn process status: {{ gunicorn_process_check.stdout }}"

    - name: Fail if Gunicorn is not running
      ansible.builtin.fail:
        msg: "Gunicorn process is not running!"
      when: gunicorn_process_check.stdout == ""


    - name: Check Redis Recovery process
      shell: "ps aux | grep 'redis_recovery_func.py' | grep -v grep"
      register: redis_recovery_process_check
      ignore_errors: yes

    - name: Print Redis Recovery process status
      ansible.builtin.debug:
        msg: "Redis Recovery status: {{ redis_recovery_process_check.stdout }}"

    - name: Fail if Redis Recovery is not running
      ansible.builtin.fail:
        msg: "Redis Recovery process is not running!"
      when: redis_recovery_process_check.stdout == ""


    - name: Get current Git branch
      ansible.builtin.command:
        cmd: git rev-parse --abbrev-ref HEAD
        chdir: /home/ubuntu/Personal-Portfolio
      register: git_branch
      ignore_errors: yes

    - name: Print current Git branch
      ansible.builtin.debug:
        msg: "Current Git branch is: {{ git_branch.stdout }}"

    - name: Fail if not on the expected branch
      ansible.builtin.fail:
        msg: "Not on the expected branch! Current branch is {{ git_branch.stdout }}"
      when: git_branch.stdout != "main"
