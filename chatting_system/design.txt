Reqs for chatting system 
    -- start chatting page 
    -- two person chatting system 
    -- links for both of them 
    -- Qr code both people 
    -- secret code for both of them 
    -- secret code matching system and error system 
    -- send and recieve message 
    -- end the session 


database -
	-- mongodb
        -- chatid (hash) 
        -- message as hash (key) : name as (val)
	-- redis 

database schema  -- 
    -- example 
       --  key (time_stamp for hash + username)
            -- ex - 5DEC20231209ABHI 
       -- value (message send )
            -- "Hi"

    Full storage system
        -- two people name ABHI and ANNY 
        -- mesaage_hash = 23AHi7
        -- ex - 23AHi7 {
        5DEC2023120912ABHI : "HI"
        5DEC2023120913ANNY : "HEY"
        }



Font end -- 
    -- Chat start page 
        -- input First participant name
        -- input Second participant name
        -- start chat button 
        -- first participant short url 
        -- second participant short url 
        -- first participant qr code 
        -- second participant qr code
        -- first participannt secret code 
        -- second partcipant secret code
    
    -- Enter chat page for one perosn  
        -- Hello Name should be written
        -- enter the secret code 
        -- Get in button

    -- chat page 
        -- show the opposite name in above 
        -- input field box 
        -- send button 
        -- Endchat button (both sides of partcipant)
            -- if any one clicks that button display chat has ended to other person 
            -- 







Backend design thinking 
    -- Db is not needed as the chat record is not stored 
    -- Chat record also should be destroyed after the chat eneded 
    -- 










Reusable components -- 
	-- hashing system
	-- qr code generation 
	-- tiny-url generation 
	-- input and output fields




-- develop
	-- chat start system
	-- message sending system
	-- message receiving system 
	-- chat ending system 
	-- dynamic chat popping and UI changing 
	-- notification service 
	-- Timeout system
	-- chat storage system 
        -- order of chat message is imp


look into -- 

    -- chat storage systems (sql , nosql any)
    -- rabbitmq 
    -- kafka
